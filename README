
Using this ongoing tutorial
https://www.linkedin.com/learning/learning-full-stack-javascript-development-mongodb-node-and-react/react-elements-and-jsx


When using react.js webpack -wd does not bundle
https://medium.com/bcgdv-engineering/when-using-react-js-webpack-dev-server-does-not-bundle-c2d340b0a3e8
Resolved by changing script location

```old <script src="/bundle.js" charset="utf-8"></script>```

```new <script src="bundle.js" charset="utf-8"></script>```

TO FIX
1. USING SASS FOR NODE: CSS STYLING IS NOT WORKING

2. In terminal after running `npm run dev` :error
WARNING in ./~/react/index.js
There is another module with an equal name when case is ignored.
This can lead to unexpected behavior when compiling on a filesystem with other case-semantic.
Rename module if multiple modules are expected or use equal casing if one module is expected.


other errors

in ./src/index.js
changed render() to hydrate() because

render() Becomes hydrate()
When you upgrade SSR code from React 15 to React 16, though, you will probably come across the following warning in your browser:

react-dom.development.js:11524 Warning: render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v17. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.


Yet another helpful React warning. render() is now hydrate()!
It turns out that in React 16, there are now two different methods for rendering on the client side: render() for when you are rendering the content solely on the client side, and hydrate() for when you are rendering on top of server-side rendered markup. Because React is backwards compatible, render() will continue to work when rendering on top of server-generated markup in React 16, but you should change those calls to hydrate() to quiet the warning and prepare your code for React 17. The code snippet we showed above would change to:

import { hydrate } from "react-dom"
import MyPage from "./MyPage"
